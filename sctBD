go
CREATE DATABASE parquea2

use parquea2 -- Ponemos en uso la base de Datos

GO
----------------------------------CREACIÓN DE TABLAS-----------------------------------
Create table VEHICULOS -- Para la creación de la tabla VEHICULOS
(
	IdEstacionar int identity primary key not null,
	CódigoPlaca int, 
	TiempoEstadia int,
	FechaIngreso date,
	HoraIngreso time,
	FechaSalida date,
	HoraSalida time,
	MontoCancelado money
	
)
go
create table PARQUEO -- Para la creación de la tabla principal PARQUEO
(	IdParqueo int identity primary key not null,
	IdEstacionar int,
	IdEspacio int,
	Gerente varchar (20),
	Teléfono int,
	CódigoPostal int,
	Dirección varchar(100),
	Provincia varchar(20),
	Ciudad varchar(20),
	CostoHora int,
	EspacioTotal int, 
	EspacioOcupado int,
	CONSTRAINT FK_PARQUEO_VEHICULOS FOREIGN KEY (IdEstacionar) REFERENCES VEHICULOS(IdEstacionar)

)
GO

-----------------------------------PROCEDIMIENTOS----------------------------------------------

------------------------REGISTRA UN NUEVO VEHÍCULO ( PARÁMETRO: PLACA)-------------------------
CREATE PROCEDURE ingresoVehiculos
@Placa as int-- # de placa
AS
INSERT into VEHICULOS (CódigoPlaca,FechaIngreso,HoraIngreso) values (@Placa, GETDATE(), SYSDATETIME()) 

go

----------------------- REGISTRA LA SALIDA DE UN VEHÍCULO ( PARÁMETRO: PLACA Y IDPAQUEO )-----
CREATE PROCEDURE salidaVehiculos-- Procedimiento que registra la Salida del vehículo

@id as int,
@idParqueo as int
As
DECLARE @costoHora as INT
Declare @estadia as int
select  @costoHora = CostoHora from PARQUEO
	where IdParqueo = @idParqueo

UPDATE VEHICULOS set FechaSalida = GETDATE()
where [IdEstacionar] = @id
UPDATE VEHICULOS set HoraSalida = SYSDATETIME()
where [IdEstacionar] = @id

UPDATE VEHICULOS SET TiempoEstadia= DATEDIFF (hh,HoraIngreso, HoraSalida)
where [IdEstacionar] = @id

select @estadia=TiempoEstadia from VEHICULOS where [IdEstacionar] = @id

if @estadia = 0 
	begin
		update VEHICULOS SET MontoCancelado =(@costoHora)
		where [IdEstacionar] = @id
	end
else
	begin
		update VEHICULOS SET MontoCancelado =(TiempoEstadia *@costoHora)
		where [IdEstacionar] = @id
	end

GO
------------------------ CREA UNA NUEVA SUCURSAL DEL PARQUEO----------------------------------
CREATE PROCEDURE NuevoParqueo -- Procedimiento que registra cada nuevo parqueo de parquea2
-- @idParqueo as int,
@gerente as varchar(20),
@telefono as int,
@codigoPostal as int,
@direccion as varchar(100),
@provincia as varchar(20),
@ciudad as varchar(20),
@costoHora as int,
@espacioTotal int, 
@espacioOcupado int
AS
INSERT into PARQUEO (Gerente, Teléfono, CódigoPostal, Dirección, Provincia, Ciudad, CostoHora,EspacioTotal, EspacioOcupado) values (@gerente,@telefono,@codigoPostal,@direccion,@provincia,@ciudad,@costoHora,@espacioTotal,@espacioOcupado)

Go
---------------------- AL INGRESAR UN VEHÍCULO, DISMINULLE LOS ESPACIOS DISPONIBLES DEL PARQUEO-------

Create Trigger ActualizarEspaciosAlIngresarVehiculos -- Trigget que reduce los espacios con cada ingreso de vehículo
on VEHICULOS for insert
AS
update PARQUEO set EspacioOcupado = EspacioOcupado - 1

go
---------------------- AL SALIR UN VEHÍCULO, AUMENTA LOS ESPACIOS DEL PARQUEO-------------------------
Create Trigger Espacios_Salida_Vehicular-- No USAR POR EL MOMENTO !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!1
on VEHICULOS for update-- > CUANDO HAY ACTUALIZACIONES EN LA TABLA vehiculos
AS
declare @idParqueo int
if update(MontoCancelado) -->Cuando se actualiza el MontoCancelado
	begin
		
		select @idParqueo=IdParqueo from PARQUEO
		update PARQUEO set EspacioOcupado = EspacioOcupado + 1
			where IdParqueo=@idParqueo
	end
go


EXEC salidaVehiculos 10, 1

EXEC ingresoVehiculos 100000
EXEC ingresoVehiculos 100100
EXEC ingresoVehiculos 300300

EXEC NuevoParqueo  'David Campos', 61372400, 5012, 'Cartago, 100mst sur de la Basílica', 'Cartago' , 'Cartago', 1000, 100, 100

SELECT * FROM VEHICULOS
SELECT * FROM PARQUEO


GO
